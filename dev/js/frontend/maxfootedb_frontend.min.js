/**
 * JavaScript Admin Functions - maxfootedb-frontend.min.js
 *
 * @author   Jake Evans
 * @category JavaScript
 * @package  Includes/Assets/Js
 * @version  6.0.0
 */

console.log('This is the JavaScript Object that holds all PHP Variables for use in the maxfootedb Front-End JavaScript file:');
console.log(maxfooteDbPhpVariables);

// All functions wrapped in jQuery(document ).ready()...
jQuery(document).ready(function ($) {
	'use strict';

	/* BEGINNING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// This is a function to save a new Vendor entry to the database on the admin side.
	maxfooteDbUserSaveToDatabase();

	/* ENDING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	function isEmpty(data) {
		if (data.length < 1) {
			return true;
		} else {
			return null;
		}
	}

	// This is a function to save a new Vendor entry to the database on the admin side.
	function maxfooteDbUserSaveToDatabase() {
		$(document).on('click', '#maxfoote-user-add-vendor', function (event) {

			$('.maxfoote-spinner').animate( {'opacity':'1'}, 500 )

			var vendorname = $('#maxfoote-form-newsite-vendorname').val();
			var vendortype = $('#maxfoote-form-newsite-vendortype').val();
			var vendorcerts = $('#maxfoote-form-newsite-vendorcerts').val();
			var vendorlicense = $('#maxfoote-form-newsite-vendorlicense').val();
			var vendortrade = $('#maxfoote-form-newsite-vendortrade').val();
			var vendoraddress = $('#maxfoote-form-newsite-vendoraddress').val();
			var vendoraddress2 = $('#maxfoote-form-newsite-vendoraddress2').val();
			var vendorcity = $('#maxfoote-form-newsite-vendorcity').val();
			var vendorstate = $('#maxfoote-form-newsite-vendorstate').val();
			var vendorzip = $('#maxfoote-form-newsite-vendorzip').val();
			var vendorphone = $('#maxfoote-form-newsite-vendorphone').val();
			var vendorcontact = $('#maxfoote-form-newsite-vendorcontact').val();
			var vendoremail = $('#maxfoote-form-newsite-vendoremail').val();
			var vendorenterprise = $('#maxfoote-form-newsite-vendorenterprise').val();
			var vendorlastupdated = $('#maxfoote-form-newsite-vendorlastupdated').val();
			var eventlocation = $('#maxfoote-form-newsite-eventlocation').val();

			console.log("Someone is trying to add a vendor");

			if (isEmpty(vendorname) || isEmpty(vendortype) || isEmpty(vendorcerts) || isEmpty(vendorlicense) || isEmpty(vendortrade) || isEmpty(vendoraddress) || isEmpty(vendorcity) || isEmpty(vendorstate) || isEmpty(vendorzip) || isEmpty(vendorphone) || isEmpty(vendorcontact) || isEmpty(vendoremail) || isEmpty(vendorenterprise) || isEmpty(vendorlastupdated) || isEmpty(eventlocation)) {
				alert("Please make sure all fields are completed");
			} else {
				var data = {
					'action': 'maxfootedb_admin_save_todb_action',
					'security': maxfooteDbPhpVariables.adminnonce2,
					'vendorname': vendorname,
					'vendortype': vendortype,
					'vendorcerts': vendorcerts,
					'vendorlicense': vendorlicense,
					'vendortrade': vendortrade,
					'vendoraddress': vendoraddress,
					'vendoraddress2': vendoraddress2,
					'vendorcity': vendorcity,
					'vendorstate': vendorstate,
					'vendorzip': vendorzip,
					'vendorphone': vendorphone,
					'vendorcontact': vendorcontact,
					'vendoremail': vendoremail,
					'vendorenterprise': vendorenterprise,
					'vendorlastupdated': vendorlastupdated,
					'eventlocation': eventlocation
				};
				console.log(data);
				$.post(ajaxurl, data, function (response) {
					console.log(response);
					if ('Entry already exists' === response) {
						$('.maxfoote-spinner').animate( {'opacity':'0'}, 500 )
						$('.maxfoote-displayentries-response-div-actual-container').html("<p class='maxfoote-displayentries-response-formatted-message-vendor-exists'>Whoops! Looks like there's already a Vendor in the Database with this name! Please check the Vendor name and try again.<p>");
					} else {
						$('.maxfoote-spinner').animate( {'opacity':'1'}, 500 )
						$('.maxfoote-displayentries-response-div-actual-container').html("<p class='maxfoote-displayentries-response-formatted-message-success'>Success! You just added a new Vendor to the Database!<p>");
						setTimeout(function(){
							document.location.reload(true);
						}, 4000 );

					}
					// Task: Tweak the User responses for when we are trying to add to the database - remove the error message upon clicking the add vendor button. Introduce some kind of success message.
					// Stretch goal - introduce some kind of spinner thing that turns on when clicking the add vendor button
					//document.location.reload(true);
				});
				event.preventDefault ? event.preventDefault() : event.returnValue = false;
			};
		});
	}

});
